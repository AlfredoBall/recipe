# build the API - Run Tests - Produce Artifacts for the Deploy workflow

name: Build API
on:
  workflow_dispatch:
env:
  API_PROJECT_PATH: Services/API/Recipe.API
  API_PROJECT_FILE: Recipe.API.csproj
  APPLICATION_ARTIFACT: Application_Artifact
jobs:
  Build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ env.API_PROJECT_PATH }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Project
        run: dotnet build ${{ env.API_PROJECT_FILE }}
      - name: Publish Artifact
        run: dotnet publish ${{ env.API_PROJECT_FILE }} -c Release -o release --nologo
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
          path: /home/runner/work/recipe/recipe/${{ env.API_PROJECT_PATH }}/release/











          
  # Deploy job
  Deploy:
    # Add a dependency to the build job
    needs: Build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages release environment
    environment:
      name: release
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
        with:
          artifact_name: ${{ env.APPLICATION_ARTIFACT }}